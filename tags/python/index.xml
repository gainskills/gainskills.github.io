<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Blog - uTIcARdI</title><link>https://blog.gainskills.top/tags/python/</link><description>Recent content in Python on Blog - uTIcARdI</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 02 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.gainskills.top/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>An incompatible issue of xls file</title><link>https://blog.gainskills.top/2019/12/02/pyxlwtdebug/</link><pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2019/12/02/pyxlwtdebug/</guid><description>Background An integration project: exporting a csv file from system A, convert the csv file to xls file, and import the converted file into system B (A 3rd party system).
Environment:
Python3.7.5 xls library: xlwt1.3 Developing on Mac 10.15.1 with VS Code, and finally the project will be published to a Docker environment(ritht now, it&amp;rsquo;s Python:3.7.5-alpine3.10). Issue The converted xls file, system B doesn&amp;rsquo;t support it. However, the file can be opened in Microsoft Excel, and then system B supports it after the open operation (did nothing, just open it then close)😫.</description></item><item><title>VSCode as an IDLE for Django</title><link>https://blog.gainskills.top/2019/11/15/vscode-as-idle-for-Django/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2019/11/15/vscode-as-idle-for-Django/</guid><description>This blog is about using MS VSCode as Django IDLE (OS: Mac OX, the steps are referenceable on Linux, Windows).
1. Download installation files and install MS VScode, Python from following links: MS VSCode
Python3
Optional: On Mac OS, I recommend homebrew for Python Installation because third party libraries&amp;rsquo; dependency will be processed smoothly.
Install homebrew:
/usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; Install Python3:</description></item><item><title>os.path.join() or os.sep.join()?</title><link>https://blog.gainskills.top/2019/07/23/path-join/</link><pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2019/07/23/path-join/</guid><description>There are two functions join a full path. E.g.: In drive: C:
|- test | |- test.xt os.path.join
import os fullpath = os.path.join(&amp;#39;c:&amp;#39;, &amp;#39;test&amp;#39;, &amp;#39;test.txt&amp;#39;) Output on windows:
c:test\test.txt Output on Mac OS c:/test/test.txt
os.sep.join
import os fullpath = os.sep.join([&amp;#39;c:&amp;#39;, &amp;#39;test&amp;#39;, &amp;#39;test.txt&amp;#39;]) Output on windows:
c:\test\test.txt Output on Mac OS c:/test/test.txt
From the outputs, you can see the difference: os.path.join() doesn&amp;rsquo;t work as expected on windows.</description></item><item><title>Post a file to Flask by Curl via API</title><link>https://blog.gainskills.top/2019/02/20/post-file-by-curl-to-flask-via-api/</link><pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2019/02/20/post-file-by-curl-to-flask-via-api/</guid><description>Curl is widely used in command lines or scripts to transfer data.
Different ways to use curl to post a file to a web server with samples (from both client-side and server: Python-Flask side) will be discussed because it took me a while on the server-side to receiving the data from client.
I would like to add samples of Python-requests, Postman later.
Started with macOS Mojave Python 3.</description></item><item><title>Python operator:single star(*)</title><link>https://blog.gainskills.top/2019/02/09/single-star-zip/</link><pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2019/02/09/single-star-zip/</guid><description>with Zip Read a block of pseudo Python code like comA = zip(lsA, lsB) comB = zip(*comA)
then made a try to see how * works: 1 2 3 4 5 6 7 8 a = [1, 2, 3] b = [4, 5, 6] c = zip(a,b) for j in c: print(j) d = zip(*c) for i in d: print(i)
and the output: (1, 4) (2, 5) (3, 6)</description></item><item><title>aiohttp/aiodns-Resolving using custom nameservers</title><link>https://blog.gainskills.top/2019/01/23/try-aiohttp/</link><pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2019/01/23/try-aiohttp/</guid><description>aiohttp is an Asynchronous HTTP client/server framework for asyncio and Python
I tried it because of the features:
Tuning the DNS cache Resolving using custom nameservers With this, verifying the CDN&amp;rsquo;s POPs with different ISPs&amp;rsquo; DNS on single a point should be possible.
Since the code on the official document is simple:
from aiohttp.resolver import AsyncResolver
resolver = AsyncResolver(nameservers=[&amp;ldquo;8.8.8.8&amp;rdquo;, &amp;ldquo;8.8.4.4&amp;rdquo;]) conn = aiohttp.TCPConnector(resolver=resolver)
I tried it with following code: ~~~python import aiohttp import asyncio from aiohttp.</description></item><item><title>get() in get() method of Pyhon dict</title><link>https://blog.gainskills.top/2019/01/19/get-in-dict-get/</link><pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2019/01/19/get-in-dict-get/</guid><description>Write down the tip for the practice: The Time in Words.
A dict was created for the time in number format to string format:
intToStrDict = { 1: &amp;#39;one&amp;#39;, 2: &amp;#39;two&amp;#39;, 3: &amp;#39;three&amp;#39;, 4: &amp;#39;four&amp;#39;, 5: &amp;#39;five&amp;#39;, 6: &amp;#39;six&amp;#39;, 7: &amp;#39;seven&amp;#39;, 8: &amp;#39;eight&amp;#39;, 9: &amp;#39;nine&amp;#39;, 10: &amp;#39;ten&amp;#39;, 11: &amp;#39;eleven&amp;#39;, 12: &amp;#39;twelve&amp;#39;, 13: &amp;#39;thirteen&amp;#39;, 14: &amp;#39;fourteen&amp;#39;, 15: &amp;#39;quarter&amp;#39;, 16: &amp;#39;sixteen&amp;#39;, 17: &amp;#39;seventeen&amp;#39;, 18: &amp;#39;eighteen&amp;#39;, 19: &amp;#39;nineteen&amp;#39;, 20: &amp;#39;twenty&amp;#39;, 30: &amp;#39;half&amp;#39;, 40: &amp;#39;fourty&amp;#39;, 50: &amp;#39;fifty&amp;#39; } get() is a good way get the value of a key from the dict, so I tried following function to convert minute in number format to string format:</description></item><item><title>AWS S3 Bucket Creation</title><link>https://blog.gainskills.top/2018/12/27/aws-s3-bucket-creation/</link><pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/12/27/aws-s3-bucket-creation/</guid><description>Try to create a bucket with the Python library: boto3
from boto3.session import Session session=Session(aws_access_key_id=&amp;#39;key1&amp;#39;, aws_secret_access_key=&amp;#39;key2&amp;#39;) s3 = session.resource(&amp;#39;s3&amp;#39;) s3.create_bucket(Bucket=&amp;#39;kz-testbucket&amp;#39;) but failed to run the script with errors:
botocore.exceptions.ClientError: An error occurred (IllegalLocationConstraintException) when calling the CreateBucket operation: The unspecified location constraint is incompatible for the region specific endpoint this request was sent to.
botocore.errorfactory.BucketAlreadyExists: An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available.</description></item><item><title>Python operator: double start(**)</title><link>https://blog.gainskills.top/2018/12/27/python-trick-double-stars/</link><pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/12/27/python-trick-double-stars/</guid><description>Here is the data:
testdata = { &amp;#39;a&amp;#39; : 1, &amp;#39;b&amp;#39;: 2 } There are two ways to pass the data to a function
Passing the data to the function
def loop(data): for key, value in data.items(): print(key, value) loop(testdata) Passing the data with operator: **
def loopStar(**kwargs): for key, value in kwargs.items(): print(key, value) loopStar(**testdata)</description></item><item><title>Ansible-Access Network via Netconf</title><link>https://blog.gainskills.top/2018/10/11/ansible-access-network-netconf/</link><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/10/11/ansible-access-network-netconf/</guid><description>Continue to try ansible with the device which was configure in netconf feature on Cisco IOS/IOSXE.
Ansible Inventory:
--- netconf: hosts: netconfIos: ansible_host: &amp;#34;172.16.254.100&amp;#34; ansible_network_os: &amp;#34;ios&amp;#34; ansible_ssh_port: 22 netconfJunos: ansible_host: &amp;#34;172.16.254.9&amp;#34; ansible_network_os: &amp;#34;junos&amp;#34; ansible_ssh_port: 830 vars: ansible_connection: &amp;#34;netconf&amp;#34; ansible_ssh_user: test ansible_ssh_pass: test123 Note:
ansible_connnection should be ‘netconf’ Be careful on the netconf port, it should be 22 if you enable netconf over SSH (the default port is 830) PlayBook:</description></item><item><title>Netconf feature on Cisco IOS/IOSXE</title><link>https://blog.gainskills.top/2018/10/07/netconf-feature-on-cisco-ios-iosxe/</link><pubDate>Sun, 07 Oct 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/10/07/netconf-feature-on-cisco-ios-iosxe/</guid><description>I tried to see how Ansible works with the netconf feature on Cisco and Juniper in past days: Juniper’s official document is clear and easy to follow. but for Cisco, I followed NETCONF over SSHv2, unfortunately, I was stuck on it for 6 days. OS Version Cisco IOS XE Software, Version 16.04.01 Cisco IOS Software, Linux Software (I86BI_LINUXL2-IPBASEK9-M), Experimental Version 15.2(20170809:194209) [dstivers-aug9_]</description></item><item><title>Ansible-Access Network via SSH</title><link>https://blog.gainskills.top/2018/09/07/ansible-access-network-via-ssh/</link><pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/09/07/ansible-access-network-via-ssh/</guid><description>After Telnet, continue to discuss how to access network device via SSH with Ansible.
For SSH access, we should consider 3 methods:
Username/password Username/Public-Key without password Username/Public-Key with password Same EVE lab as the Telnet one: The Cisco IOS Router-192.168.1.99 is for SSH
Topo Enable SSH on the router Jump #1 username/password part to public key configuration, I discussed how to configure public key on IOS router with Putty before, instead of windows/putty, openssh is useful for generating keys on MAC OS.</description></item><item><title>Ansible-Access Network via Telnet</title><link>https://blog.gainskills.top/2018/09/04/ansible-access-network-via-telnet/</link><pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/09/04/ansible-access-network-via-telnet/</guid><description>I’m learning Ansible by reading the official document and some books like Ansible入门. Most of the instructions show you how to deploy or maintain the services on Linux, or file operations. But what I do is trying to explore its capability on network device management automation. The most important thing to practice routers/switches/routing protocol is accessing the device and</description></item><item><title>Mininet-ImportError: customClass</title><link>https://blog.gainskills.top/2018/07/20/mininet-importerror-customclass/</link><pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/07/20/mininet-importerror-customclass/</guid><description>I tried to run miniedit.py after I have mininet installed, unfortunately, I got the error:
ImportError: cannot import name customClass. Error Checked the py file: ~/mininet/mininet/util.py and miniedity.py, find nothing is wrong, search on the Internet, got no clue.
Suddenly I found the version is not the version I wanted to install (I forgot to take a screenshot, the version should be 2.2.2daily something).
I guess there must be something wrong with the latest version, or there is something conflict with my previous version (mininet 2.</description></item><item><title>Flask, Flask-WTF, Flask-Bootstrap, Select2, jinja2 integration</title><link>https://blog.gainskills.top/2018/04/16/flask-flask-wtf-flask-bootstrap-select2-jinja2-integration/</link><pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/04/16/flask-flask-wtf-flask-bootstrap-select2-jinja2-integration/</guid><description>I intend to acquire the Python skill on web after years&amp;rsquo; work on data processing, so I started with Flask by the following Miguel Grinberg&amp;rsquo;s instruction: The Flask Mega, you can learn how to integrate bootstrap with your project from it. After that, you can learn how to integrate select2 with your project by reading Flask Web开发:用Select2</description></item><item><title>Python SMTPlib/Email</title><link>https://blog.gainskills.top/2018/02/13/python-smtplib-email/</link><pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/02/13/python-smtplib-email/</guid><description>I followed the instruction which is written in Chinese to learn how to send emails by Python, here some tips from my practice:
Name of the attachment is shown as ‘ATT00002’
The name of the attachment in the receiver mailbox is shown in the format ‘ATT0000X‘ with the code:
att1[&amp;#34;Content-Disposition&amp;#34;] = &amp;#39;attachment; filename=&amp;#34;runoob.txt&amp;#34;&amp;#39; Issue The issue can be fixed by using .addheader() function:</description></item><item><title>30分钟上手Python网络爬虫</title><link>https://blog.gainskills.top/2018/01/30/30min-python-web-scrapper/</link><pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2018/01/30/30min-python-web-scrapper/</guid><description>原文链接: https://hackernoon.com/30-minute-python-web-scraper-39d6d038e5da 此翻译已经获得作者许可。对原文、本文任何形式的转载、引用，必须知会作者 我想用Python和Selenium做网络爬虫有一会了，但</description></item><item><title>OverflowError: signed char is greater than maximum</title><link>https://blog.gainskills.top/2017/06/06/overflowerror-signed-char-is-greater-than-maximum/</link><pubDate>Tue, 06 Jun 2017 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2017/06/06/overflowerror-signed-char-is-greater-than-maximum/</guid><description>Here the pseudo code about the flow:
from array import array c = array(&amp;#39;b&amp;#39;) with open(file, mode = &amp;#39;rb&amp;#39;) as f: for character in f: res = func(character) c.append(res) It runs into the error:
OverflowError: signed char is greater than maximum with a special character &amp;lsquo;À&amp;rsquo; which its binary value is 192:
Character My way to resolve this error is to update the type code of the array from &amp;lsquo;b&amp;rsquo; (signed char) to &amp;lsquo;B&amp;rsquo; (unsigned char).</description></item><item><title>Run Ansible on Windows</title><link>https://blog.gainskills.top/2016/11/30/run-ansible-on-windows/</link><pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2016/11/30/run-ansible-on-windows/</guid><description>Background:
Here is a topology about the environment for performance testing, let’s name the servers 1st:
1 windows server as the License/Workspace server 5 windows servers as the Network Server 5 windows servers as the Automation server Topo It took us a lot of time to deploy the product and collect logs on all of these servers.
My colleague wrote a client-server application and do some of the tasks automatically.</description></item><item><title>VSCode for Python debug</title><link>https://blog.gainskills.top/2016/11/10/vscode-for-python-debug/</link><pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2016/11/10/vscode-for-python-debug/</guid><description>MS VS Code for Python debug from k z View the article here if the iframe failed to load: www.slideshare.net/slideshow/embed_code/key/3GrRaqBAXV9mK</description></item><item><title>Loop a dict to update the keys</title><link>https://blog.gainskills.top/2016/07/21/loop-a-dict-to-update-key/</link><pubDate>Thu, 21 Jul 2016 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2016/07/21/loop-a-dict-to-update-key/</guid><description>Source dict:
{&amp;#39;keyA&amp;#39;: &amp;#39;&amp;#39;, &amp;#39;keyB&amp;#39;: &amp;#39;&amp;#39;} Expected dict:
{‘keyA/&amp;#39;keyA&amp;#39; :’’, keyA/keyB’ : ‘’} Code1:
keyPrefix = &amp;#39;keyA&amp;#39; for key, value in Dict.items():  newkey = &amp;#39;/&amp;#39;.join([keyPrefix, key])  Dict[newkey] = Dict.pop(key) Code2:
keyPrefix = &amp;#39;keyA&amp;#39; for key, value in Dict.keys():  newkey = &amp;#39;/&amp;#39;.join([keyPrefix, key])  Dict[newkey] = Dict.pop(key) Result of code1/code2 is:
{&amp;#39;keyA/keyA/keyB&amp;#39; : &amp;#39;&amp;#39;, &amp;#39;keyA/keyA/keyA&amp;#39;: &amp;#39;&amp;#39;} It doesn&amp;rsquo;t work as expected, and I found the case only exists when prefix is the same to a key of the dict which means code1/code2 works well when the keyPrefix is neither ‘keyA’ nor ‘beyB’.</description></item><item><title>Python多版本, Sublime Text, Anaconda指北</title><link>https://blog.gainskills.top/2016/06/07/python-sublimetext-anaconda/</link><pubDate>Tue, 07 Jun 2016 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2016/06/07/python-sublimetext-anaconda/</guid><description>介绍 Sublime text是一款很好用的文本编辑器，更是一款先进的代码编辑器，支持通过插件进行功能扩展。在使用过UltraEditor, Notepad++, vim等等编辑</description></item><item><title>SNMP simulator installation guide</title><link>https://blog.gainskills.top/2016/01/28/snmp-simulator-installation-guide/</link><pubDate>Wed, 13 Nov 2013 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2016/01/28/snmp-simulator-installation-guide/</guid><description>About SNMP Simulator
The the SNMP Simulator software is intended for testing SNMP Managers against a large number of SNMP Agents that represent a potentially very large network populated with different kinds of SNMP-capable devices.
Refers to its project page for more info.
Why?
With SNMP simulator you can simulate a device by the output of SNMPwalk without considering MIB files.
This article is about how to install SNMP Simulator.</description></item></channel></rss>